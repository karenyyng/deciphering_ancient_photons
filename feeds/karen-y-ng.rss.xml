<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>From data to insights</title><link>http://karenyyng.github.io/</link><description></description><atom:link href="http://karenyyng.github.io/feeds/karen-y-ng.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 31 May 2016 00:00:00 -0700</lastBuildDate><item><title>Git mergetool tutorial</title><link>http://karenyyng.github.io/git-mergetool-tutorial.html</link><description>&lt;h6 id="top"&gt;&lt;/h6&gt;

&lt;h3&gt;Table Of Content for post&lt;/h3&gt;
&lt;p&gt;Skip to the relevant sections if needed.   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#concepts-for-resolving-git-conflicts"&gt;Concepts for resolving &lt;code&gt;Git conflicts&lt;/code&gt;&lt;/a&gt;   &lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-different-editors--tool-for-using-git-mergetool"&gt;Setting up different editors / tool for using &lt;code&gt;git mergetool&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#finding-out-what-mergetool-editors-are-supported"&gt;Finding out what &lt;code&gt;mergetool&lt;/code&gt; editors are supported&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#mergetool-simple-code-example"&gt;&lt;code&gt;mergetool&lt;/code&gt; simple code example for &lt;code&gt;vimdiff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-great-references-and-tutorials"&gt;Other great references and tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Concepts for resolving &lt;code&gt;Git conflicts&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;For using &lt;code&gt;mergetool&lt;/code&gt; in &lt;code&gt;git&lt;/code&gt;,  we need to understand the following terminology to understand what is being merged:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LOCAL&lt;/code&gt; - the file(s) from the current branch on the machine that you are using.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REMOTE&lt;/code&gt; - the files(s) from a remote location that you are trying to merge into your &lt;code&gt;LOCAL&lt;/code&gt; branch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BASE&lt;/code&gt; - the common ancestor(s) of &lt;code&gt;LOCAL&lt;/code&gt; and &lt;code&gt;BASE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MERGED&lt;/code&gt; - the tag / &lt;code&gt;HEAD&lt;/code&gt; object after the merge - this is saved as a new commit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Common &lt;code&gt;mergetool&lt;/code&gt; from editors will display both &lt;code&gt;LOCAL&lt;/code&gt; and &lt;code&gt;REMOTE&lt;/code&gt;  so you can decide which changes to keep.&lt;/p&gt;
&lt;h3&gt;Setting up different editors / tool for using &lt;code&gt;git mergetool&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;We have to change the &lt;code&gt;git config&lt;/code&gt; to set a default mergetool.
In this example, we will use &lt;code&gt;vimdiff&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config merge.tool vimdiff      
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can also set the editor to display the common ancestor &lt;code&gt;BASE&lt;/code&gt; while we examine what changes are in &lt;code&gt;LOCAL&lt;/code&gt; and &lt;code&gt;REMOTE&lt;/code&gt; with the following setting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config merge.conflictstyle diff3  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Finding out what &lt;code&gt;mergetool&lt;/code&gt; editors are supported&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git mergetool --tool-help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And we list a few of them:&lt;/p&gt;
&lt;h6&gt;Command line &lt;code&gt;mergetool&lt;/code&gt; editors&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Emacs&lt;/code&gt; based diff tools: &lt;code&gt;emerge&lt;/code&gt;, or  &lt;a href="https://whatworks4me.wordpress.com/2011/04/13/view-git-diffs-in-emacs-using-ediff/"&gt;&lt;code&gt;Ediff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Vim&lt;/code&gt; based diff tool: &lt;a href="http://www.rosipov.com/blog/use-vimdiff-as-git-mergetool/"&gt;&lt;code&gt;vimdiff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;GUI &lt;code&gt;mergetool&lt;/code&gt; editors&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gvimdiff&lt;/code&gt; - almost identical to &lt;code&gt;vimdiff&lt;/code&gt; but uses the Linux GUI for &lt;code&gt;Vim&lt;/code&gt;, please refer to &lt;code&gt;vimdiff&lt;/code&gt; if you still use the keyboard commands for &lt;code&gt;GVim&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kdiff3.sourceforge.net/"&gt;&lt;code&gt;kdiff3&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.deadlypenguin.com/blog/2011/05/03/using-meld-with-git-diff/"&gt;&lt;code&gt;meld&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tortoisesvn.net/docs/nightly/TortoiseMerge_en/tmerge-dug.html"&gt;&lt;code&gt;tortoisemerge&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or consult the community of your favorite editor to see how to do the equivalent operations for your editor.&lt;/p&gt;
&lt;h4&gt;Other useful &lt;code&gt;mergetool&lt;/code&gt; settings&lt;/h4&gt;
&lt;p&gt;Do not prompt before launching the merge resolution tool&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config mergetool.prompt &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;mergetool&lt;/code&gt; simple code example&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.rosipov.com/blog/use-vimdiff-as-git-mergetool/"&gt;Ref1 for the example&lt;/a&gt; &lt;br /&gt;
&lt;a href="http://flaviusim.com/blog/how-to-do-a-git-merge-with-vim/"&gt;Ref2&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;creating the git repo&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir galaxyZoo
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;galaxyZoo
&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;vim astrophy_obj.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add some galaxy types into &lt;code&gt;astrophy_obj.txt&lt;/code&gt; then save the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# content of astrophy_obj.txt
spiral
ellipitcal
bar 
irregular
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;save then commit the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add astrophy_obj.txt
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s1"&gt;&amp;#39;Initial commit&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git branch astrophy_objects   &lt;span class="c"&gt;# create a new branch&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout astrophy_objects &lt;span class="c"&gt;# change to new branch&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;vim astrophy_obj.txt          &lt;span class="c"&gt;# make changes to file &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;barred&lt;/code&gt; in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;changed bar to barred&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout master   &lt;span class="c"&gt;# change back to master branch&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;vim astrophy_obj.txt  
&lt;span class="c"&gt;# add the word `galaxy` to the end of each line using Vim REGEX &lt;/span&gt;
&lt;span class="c"&gt;# type `:%s/$/ galaxy/g` in Vim then press enter and save `:wq`&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;added galaxy to each line&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# merge from the astrophy_objects branch to current branch, i.e. master&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git merge astrophy_objects  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then you will see some error messages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Auto-merging astrophy_obj.txt
CONFLICT (content): Merge conflict in astrophy_obj.txt
Automatic merge failed; fix conflicts and then commit the result.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can bring up the &lt;code&gt;mergetool&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git mergetool
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then it will bring up the different versions of the file in different &lt;code&gt;Vim splits&lt;/code&gt; panels.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+--------------------------------+
| LOCAL  |     BASE     | REMOTE |
+--------------------------------+
|             MERGED             |
+--------------------------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The top left split panel is the &lt;code&gt;LOCAL&lt;/code&gt;, top middle split is &lt;code&gt;BASE&lt;/code&gt; and top right split is &lt;code&gt;REMOTE&lt;/code&gt;.
The bottom split refers to the &lt;code&gt;MERGED&lt;/code&gt; version.
You can find this info in the bottom bar of each split (I have put 3 yellow rectangles to highlight that info).&lt;/p&gt;
&lt;p&gt;As you can see form the below image, my &lt;code&gt;Vim&lt;/code&gt; has highlighted the differences in red for me.
&lt;img alt="Vim mergetool image" src="https://app.box.com/representation/file_version_37661948594/image_2048/1.png?shared_name=ws92iu1ftjib8pcmq0b8hly0hwwnb1jh" /&gt;&lt;/p&gt;
&lt;p&gt;Now if your terminal has any GUI capability and you have compiled &lt;code&gt;Vim&lt;/code&gt; correctly with GUI support, you can use your mouse to click on the bottom split to edit it.
Or if you are a &lt;code&gt;Vim&lt;/code&gt; ninja, you can use the keyboard shortcut to move to different splits.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Ctrl w + h   # move to the split on the left 
Ctrl w + j   # move to the split below
Ctrl w + k   # move to the split on top
Ctrl w + l   # move to the split on the right
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can either incorporate the changes by manually editing the &lt;code&gt;MERGED&lt;/code&gt; split, 
or use &lt;code&gt;Vim&lt;/code&gt; shortcuts pull from one of the &lt;code&gt;LOCAL&lt;/code&gt;, &lt;code&gt;BASE&lt;/code&gt; ad &lt;code&gt;REMOTE&lt;/code&gt; versions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:diffg RE  # get from REMOTE
:diffg BA  # get from BASE
:diffg LO  # get from LOCAL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;save the changes then quit with &lt;code&gt;:wqa&lt;/code&gt; to close all the splits.
Remember to commit the merge.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;merged from several branches&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Other tips: if you were trying to do a &lt;code&gt;git pull&lt;/code&gt; when you ran into &lt;code&gt;merge&lt;/code&gt; conflicts, issue &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase –continue
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hooray now you can claim that you can collaborate with others with Git without messing up with your collaborators' commits.&lt;/p&gt;
&lt;p&gt;&lt;a href="#"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Other &lt;code&gt;vimdiff&lt;/code&gt; keyboard shortcuts&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;]c - Jump to the next change.
[c - Jump to the previous change.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://amjith.blogspot.com/2008/08/quick-and-dirty-vimdiff-tutorial.html"&gt;ref&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Other great references and tutorials&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://git-scm.com/docs/git-mergetool"&gt;git mergetool page on git-scm.com&lt;/a&gt; &lt;br /&gt;
&lt;a href="http://www.sbf5.com/~cduan/technical/git/git-3.shtml"&gt;tutorial about the concepts of branching and merging from Charles Duan&lt;/a&gt;     &lt;br /&gt;
&lt;a href="http://vim.wikia.com/wiki/A_better_Vimdiff_Git_mergetool"&gt;more on vimdiff as a git mergetool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#"&gt;back to top&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Karen Y. Ng</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 -0700</pubDate><guid>tag:karenyyng.github.io,2015-09-20:git-mergetool-tutorial.html</guid><category>Explain X in 10 minutes</category><category>reproducible science</category><category>Git</category></item></channel></rss>