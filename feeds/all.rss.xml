<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>From photons to science</title><link>http://karenyyng.github.io/</link><description></description><atom:link href="http://karenyyng.github.io/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 24 Dec 2014 18:30:00 -0800</lastBuildDate><item><title>Using Virtualenv for safeguarding research project dependencies</title><link>http://karenyyng.github.io/using-virtualenv-for-safeguarding-research-project-dependencies.html</link><description>&lt;h3&gt;Why virtualenv&lt;/h3&gt;
&lt;p&gt;It’s a tragedy whenever a code breaks after a software “update”.
I have recently started using virtualenv for python to prevent my
macport / apt-get updates from messing up the code of my research projects.
Additionally, by providing a list of python package version, it can
enhance reproducibility.
Before I forget how to set it up correctly,
I should write about it.&lt;/p&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;I will use python 2.7 and assume the use of macport for this post.
You should also have   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;py27-virtualenv&lt;/li&gt;
&lt;li&gt;pip &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;installed, either with &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;macport&lt;/code&gt; or &lt;code&gt;apt-get&lt;/code&gt; or if you like, from
source. I think you also can replace pip with easy_install if you prefer
easy_install instead.
I also assume you know some basic shell commands.&lt;/p&gt;
&lt;h3&gt;How to create virtualenv&lt;/h3&gt;
&lt;p&gt;If you just want to use virtualenv for the same version python as the
system wide version, at a terminal, call the executable of virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv-27 --no-site-packages ENVNAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command could also be &lt;code&gt;virtualenv&lt;/code&gt; for some people. 
I assumed that &lt;code&gt;virtualenv&lt;/code&gt; was installed using &lt;code&gt;macport&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;creating virtualenv this way will instruct that the paths inside the virtual env not to include path the system wide python packages
(using &lt;code&gt;–no-site-packages&lt;/code&gt; seems to be the default behavior for virtualenv but let me just mention that)
After this command, whatever python packages installed to the &lt;code&gt;PATH&lt;/code&gt; variable
in the shell configuration file (e.g. .bashrc / .bash_profile) will be
ignored when the virtualenv is activated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;Caveats&lt;/h4&gt;
&lt;p&gt;Note if you have python packages path set as part of &lt;code&gt;PYTHONPATH&lt;/code&gt;, your
virtualenv will not work properly so you will want to remove any system
wide python packages from your &lt;code&gt;PYTHONPATH&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once the command above is done executing, a folder with ENVNAME will be created that has the structure for installing its own set of python packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ls ENVNAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will show you the following directory structure &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bin include lib share
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, you want to figure out what packages to install and what not to install.
These packages will be installed within the &lt;code&gt;ENVNAME&lt;/code&gt; directory structure,
more specifically inside: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;APPROPRAITE_PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ENVNAME&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/lib/python2.7/site-packages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let’s try to activate the virtual env:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;APPROPRIATE_PATH/ENVNAME/bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then you terminal prompt will change to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(ENVNAME)$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;check if the pip inside this environment is a local version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(ENVNAME)$ which pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;should show&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(ENVNAME)$ ENVNAME/bin/pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can feel free to use this local version of pip to install whatever
packages you want.&lt;/p&gt;
&lt;h3&gt;Saving package version and reinstalling packages&lt;/h3&gt;
&lt;p&gt;Let's say you have installed a bunch of packages for a specific coding
project and you want to save the package used and the respective version.
We can have the pip list all the python packages you have
installed and save it somewhere&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;ENVNAME&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip freeze &amp;gt; packages.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's say you want to set up the same virtual environment on another
machine.
Now you can copy over "packages.txt", set up the machine using the steps
above, then reinstall your packages within this local environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;ENVNAME&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -r packages.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which may or may not work well depending on if you have external source of packages.&lt;/p&gt;
&lt;p&gt;Let’s say you are like me and have installed some python packages from non-conventional sources, one hackish way to make sure those will be installed properly in the virtualenv is to just copy the directory containing installed python packages to the local environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;ENVNAME&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo cp -r PATH1 APPROPRAITE_PATH/ENVNAME/python2.7/site-packages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;PATH1&lt;/code&gt; is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;PATH1
&lt;span class="s2"&gt;&amp;quot;/TIME_MACHINE_BACKUP/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python/2.7/site-packages/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can check if the library versions are alright:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ENVNAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;astropy&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;astropy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;0.4&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;while you can check that the system wide version of the library has a
different version after deactivating the virtual env&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;APPROPRAITE_PATH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ENVNAME&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;deactivate&lt;/span&gt;  
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;astropy&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;astropy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;0.4.1&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Automating virtualenv activation&lt;/h3&gt;
&lt;p&gt;Last bit of this post is about being lazy and having the virtualenv automatically activate itself
when you switch to the appropriate directory using command line.&lt;/p&gt;
&lt;p&gt;You will need the python package &lt;code&gt;autoenv&lt;/code&gt; which can be installed by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install autoenv
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source &lt;/span&gt;&lt;span class="nv"&gt;$PATH_TO_AUTOENV&lt;/span&gt;&lt;span class="s2"&gt;/activate.sh&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$APPROPRIATE_PATH&lt;/span&gt;/ &lt;span class="c"&gt;# this is the parent directory where ENVNAME lives&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source ABSOLUTE_PATH/ENVNAME/bin/activate&amp;quot;&lt;/span&gt; &amp;gt; .env
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;now whenever you switch to the appropriate directory,
the virtual env will be activated for you.&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;If you see any weird behavior for importing modules in the virtualenv or
when using pytest, make sure that you are using versions of python packages
installed from within the virtualenv and not the system version.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;creating virtualenv for a different python version&lt;/h3&gt;
&lt;p&gt;let's say that I use python 2.7 for most of my projects and 
would like to play with python 3.4 i can first install python version 3.4
using macport by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo port install python34 py34-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then the only difference when creating the virtualenv is to specify using
python 3.4&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv -p &lt;span class="k"&gt;$(&lt;/span&gt;which python3.4&lt;span class="k"&gt;)&lt;/span&gt; ENVNAME --distribute
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Other virtualenv tutorials&lt;/h3&gt;
&lt;p&gt;There is a wonderful tutorial from
&lt;a href="http://docs.astropy.org/en/stable/development/workflow/virtual_pythons.html#virtual-envs"&gt;astropy.&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K. Y. Ng</dc:creator><pubDate>Wed, 24 Dec 2014 18:30:00 -0800</pubDate><guid>tag:karenyyng.github.io,2014-12-24:using-virtualenv-for-safeguarding-research-project-dependencies.html</guid><category>Python</category><category>reproducible science</category></item><item><title>New year resolution + 1st post</title><link>http://karenyyng.github.io/new-year-resolution-1st-post.html</link><description>&lt;p&gt;One thing that I greatly admire my advisor, Prof. D. Wittman, for is that he is extremely
well spoken and explains things very clearly.&lt;br /&gt;
Now as a science student I think this is a very important ability that I
still need to improve on. By setting up this blog I hope to force myself
to explain and share with others the mini-projects / ideas that I am
working / have worked on. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K. Y. Ng</dc:creator><pubDate>Wed, 24 Dec 2014 17:00:00 -0800</pubDate><guid>tag:karenyyng.github.io,2014-12-24:new-year-resolution-1st-post.html</guid></item><item><title>PyTables!</title><link>http://karenyyng.github.io/pytables.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://pytables.github.io/usersguide/tutorials.html"&gt;Using PyTables to store / organize data is just
awesome!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reading this lowers my blood pressure level.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pytables.github.io/usersguide/tutorials.html#dealing-with-nested-structures-in-tables"&gt;http://pytables.github.io/usersguide/tutorials.html#dealing-with-nested-structures-in-tables&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Thu, 11 Dec 2014 23:09:00 -0800</pubDate><guid>tag:karenyyng.github.io,2014-12-11:pytables.html</guid></item><item><title>AstroData Hack Week conclusion</title><link>http://karenyyng.github.io/astrodata-hack-week-conclusion.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;It has been a wonderful week in Seattle.&lt;/div&gt;
&lt;div class="line"&gt;The organizers have really done a great job in trying
to get the participants together to work on stuff.&lt;/div&gt;
&lt;div class="line"&gt;And special thanks to Phil who's done a marvelous job to talk to the participants and&lt;/div&gt;
&lt;div class="line"&gt;reboot the atmosphere when people are stuck.&lt;/div&gt;
&lt;div class="line"&gt;The progress of my little project can be viewed at:&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://hackpad.com/Representing-overdensities-in-astro-data-clustering-KDE-rz6RcKo666V"&gt;https://hackpad.com/Representing-overdensities-in-astro-data-clustering-KDE-rz6RcKo666V&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;And there will be reports of attempts of more smaller &amp;quot;hacks&amp;quot; coming.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Wed, 24 Sep 2014 10:14:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-09-24:astrodata-hack-week-conclusion.html</guid></item><item><title>AstroData Hack Week - day 1</title><link>http://karenyyng.github.io/astrodata-hack-week-day-1.html</link><description>&lt;p&gt;Fernando Perez is giving the lecture about ipython notebook this morning.&lt;/p&gt;
&lt;p&gt;These are some notes of the interesting ideas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;import all the dependencies when you try to export some cell content into a function
you can use
&lt;tt class="docutils literal"&gt;%celltofunc&lt;/tt&gt;
but it is still work in progress&lt;/li&gt;
&lt;li&gt;jinja template files for conversion to ipynb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ipython nbconvert &lt;span class="pre"&gt;--to&lt;/span&gt; python &lt;span class="pre"&gt;--template=simplypython.tpl&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;convert ipynb as documentation in sphinx&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Jake Vanderplas took over just now to teach efficient programming in
numpy (!!!)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;he talked about how to use the reduce ufunc ... that I almost never use but is useful to know&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Back to Fernando about cool coding + collaboration stuff:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://gitter.im/"&gt;https://gitter.im/&lt;/a&gt; - for any public git repos you can a start a conversation with any git users&lt;/li&gt;
&lt;li&gt;seaborn is a nice high-level library for plotting data sets, even if they are in pandas data frame format!&lt;/li&gt;
&lt;li&gt;virtual machines with packages shipped with an ipynb that documents the data analysis of a paper, using starclusters ......&lt;/li&gt;
&lt;li&gt;Jupyter - people are trying to make ipython notebook more inclusive since it can communicate not only with python but with Julia and R! &lt;a class="reference external" href="http://jupyter.org/"&gt;http://jupyter.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Some statistics from astrophysics perspective&lt;/p&gt;
&lt;p&gt;Dan Foreman-Mackey gave a presentation on the application of Gaussian
processes of detecting exolents or what's known as Kriging in
geophysics. And he recommended some online books at
&lt;a class="reference external" href="http://www.gaussianprocess.org/gpml/"&gt;http://www.gaussianprocess.org/gpml/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Mon, 15 Sep 2014 22:23:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-09-15:astrodata-hack-week-day-1.html</guid></item><item><title>SFAA talk on El Gordo</title><link>http://karenyyng.github.io/sfaa-talk-on-el-gordo.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://karenyng.files.wordpress.com/2014/08/screen-shot-2014-08-20-at-11-54-06-pm.png"&gt;&lt;img alt="Screen Shot 2014-08-20 at 11.54.06 PM" src="http://karenyng.files.wordpress.com/2014/08/screen-shot-2014-08-20-at-11-54-06-pm.png?w=300" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I just gave a public talk on El Gordo, the galaxy cluster that I've been
working on.&lt;/p&gt;
&lt;p&gt;This is almost exactly one year after I gave a more technical talk on
the same cluster in my PhD candidacy exam.&lt;/p&gt;
&lt;p&gt;And the slides are at ......&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://slideslive.com/38891780/el-gordo"&gt;http://slideslive.com/38891780/el-gordo&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Thu, 21 Aug 2014 01:03:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-08-21:sfaa-talk-on-el-gordo.html</guid></item><item><title>Bayesian Logical Data Analysis in the Physical Sciences</title><link>http://karenyyng.github.io/bayesian-logical-data-analysis-in-the-physical-sciences.html</link><description>&lt;p&gt;&lt;img alt="Bayesian Logical Data Analysis in the Physical Sciences" src="http://karenyng.files.wordpress.com/2014/06/41hnrzmbxml.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;This is my new favorite book about Bayesian stat that I learned about
from the Penn. State Astrostat summer school.&lt;/p&gt;
&lt;p&gt;Note that it's written by an astronomer and provides Mathematica code
(can't get more astro/ physics than that!!! i think only physicists /
astrophysicists have such a love for Mathematica which is very expensive
in my opinion ... )&lt;/p&gt;
&lt;p&gt;Today I have been reading about sample comparison:
Given two samples, determine if they come from the same distribution.&lt;/p&gt;
&lt;p&gt;For such a problem, frequentists assume a null hypothesis that the
samples are different then do some tests to reject the null hypothesis.
Bayesians evaluate the probability of different cases when....&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;means being the same, variances being the same&lt;/li&gt;
&lt;li&gt;means being the same, variances being different&lt;/li&gt;
&lt;li&gt;means being different, variances being the same&lt;/li&gt;
&lt;li&gt;mean being different and variances being different&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For details, read Appendix C of the book.
Is this what I want for answering the scientific question that I have
in mind?
I am not sure.
I have to think harder / talk to some Bayesians.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Wed, 18 Jun 2014 21:18:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-06-18:bayesian-logical-data-analysis-in-the-physical-sciences.html</guid></item><item><title>Extragalactic astronomy and cosmology 2</title><link>http://karenyyng.github.io/extragalactic-astronomy-and-cosmology-2.html</link><description>&lt;p&gt;&lt;img alt="Extragalactic astronomy and cosmology 2" src="http://karenyng.files.wordpress.com/2014/06/telescope_names.png" /&gt;&lt;/p&gt;
&lt;p&gt;Fig Credit: (one of my favorite comics - XKCD)&lt;/p&gt;
&lt;p&gt;Today i'm reading the intro part of the book that talks about different
types of telescopes. I might have read it before but i guess i should be
familiar with them. When I talk with my fellow astronomer friends, I
want to know which telescope they are referring to ... where it is, what
it is for etc.&lt;/p&gt;
&lt;p&gt;Today I only aim to read about radio telescopes because they came
first in the book.
Radio wavelengths are some of the few wavelengths that we can observe
on earth from lambda ~ 5 mm to ~30 m.&lt;/p&gt;
&lt;p&gt;Important features that people try to detect in the radio wavelengths
include&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the 21-cm emission line which is a sign of neutral hydrogen&lt;/li&gt;
&lt;li&gt;1.2 mm feature for high redshift galaxy ... maybe they r looking at X-band dropouts? (where X is some photometry bands)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Important telescopes include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;VLA in New Mexico&lt;/li&gt;
&lt;li&gt;Arecibo telescope in Puerto Rico which is the largest single dish radio non-steerable telescope&lt;/li&gt;
&lt;li&gt;James Clerk Maxwell telescope on Mauna Kea&lt;/li&gt;
&lt;li&gt;VLBI, very large baseline inferometry (VLBI) which consists of multiple telescopes on several continents so they can have different baselines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And i know there should a few more radio arrays coming online all around
the world doing exciting early universe cosmology &amp;nbsp;(e.g. for the epoch
of reionization). They are going to have massive data sets according to
people I met at Penn. State. Hopefully they will also figure out what to
do with the massive data and get good science out of them :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Sun, 15 Jun 2014 23:10:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-06-15:extragalactic-astronomy-and-cosmology-2.html</guid><category>telescopes</category><category>astronomy</category></item><item><title>Feynman lecture on Physics</title><link>http://karenyyng.github.io/feynman-lecture-on-physics.html</link><description>&lt;p&gt;&lt;img alt="Feynman lecture on Physics" src="http://karenyng.files.wordpress.com/2014/05/61rrhhcxhxl-_sy300_.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I have always liked Feynman as a physicist - I felt like his lectures
might be too good not to be read during grad school. Today I am reading
the E&amp;amp;M part - since I am a E&amp;amp;M TA this quarter. I am starting from the
very first chapter where he describes the basics - you can usually tell
if the book 's good if the author can go through the basic math in a
crystal clear way.&lt;/p&gt;
&lt;p&gt;I cannot believe how he verbalized Gauss' law and the concept of and
divergence
It is just mind blowing - every undergrad should have learned it this
way - i.e. to understand what's going on before looking at the math
symbols! He put:
(Electric)
flux = (average normal component ) * (surface area)&lt;/p&gt;
&lt;p&gt;(Magnetic)
circulation = (avg. tangential component) * (distance of the loop)&lt;/p&gt;
&lt;p&gt;so that Gauss' law can simply be verbalized as
flux of E field through any closed surface = enclosed charge / epsilon_naught&lt;/p&gt;
&lt;p&gt;Those are just some really very simple and easy to understand words that
hides all the complicated math from first time learners. Sometimes I
really hope that I have the clarity to promote physics concepts like
these to my students.&lt;/p&gt;
&lt;p&gt;As a TA and a physics student myself, I experience all too often that
once a student starts fearing a subject, i.e. once s/he sees the
complicated math, s/he stops thinking about what's going on and just
tries to pull whatever seems relevant for solving a problem. They would
not make the equations / math / the physical model adapt to the problem
but just substitute whatever seems convenient. Setting up the problem
correctly allows you to get through 90% of the problem, the rest is
usually just algebra / computation. Students often do not see that.....&lt;/p&gt;
&lt;p&gt;Anyway, it's good that the Feynman lectures are at an undergrad level so
it's still quite light of a reading. Hopefully I will get through all
three volumns then start reading some graduate level books such as
Landau and Liftshitz.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Thu, 29 May 2014 23:57:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-05-29:feynman-lecture-on-physics.html</guid></item><item><title>Practical Statistics for Astronomer</title><link>http://karenyyng.github.io/practical-statistics-for-astronomer.html</link><description>&lt;p&gt;&lt;img alt="Practical Statistics for Astronomer" src="http://karenyng.files.wordpress.com/2014/05/815vfrmyp8l-_sl1500_.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;To best honest I never read the book very carefully when it was used
as the text for my 2nd year cosmology data analysis class (sorry Chris).
It is actually quite a fun read since it started by describing the
important stat. developments throughout history in the first chapter and
then goes through the basics. There isn't a lot of math so it's easy to
skim through. The best point is that the examples are very relevant and
point out common pitfalls.&lt;/p&gt;
&lt;p&gt;For example in astronomy a lot of stuff is in power law form, turns
out a power-law distribution does not fit the formal definition of a
p.d.f., (i.e. p.d.f. has to be &amp;gt; 0, and integrates to 1) and that the
binning of data that follows power law distribution has to be taken with
care etc.&lt;/p&gt;
&lt;p&gt;I would give it bonus points for including a lot of Bayesian stuff and
giving good comparisons between the Frequentists and Bayesian views. :D&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Wed, 28 May 2014 22:04:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-05-28:practical-statistics-for-astronomer.html</guid><category>statistics</category><category>astronomy</category></item><item><title>Extragalactic Astronomy and Cosmology</title><link>http://karenyyng.github.io/extragalactic-astronomy-and-cosmology.html</link><description>&lt;p&gt;&lt;img alt="Extragalactic Astronomy and Cosmology" src="http://karenyng.files.wordpress.com/2014/05/51hiovcekll.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Definitely one of my favorite text on extragalactic astronomy, so fond
of it that I actually owned a physical copy of the text. Today I am
reading a subsection on stuff that I work on - X-ray radiation from
clusters of galaxies :D&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Tue, 27 May 2014 23:33:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-05-27:extragalactic-astronomy-and-cosmology.html</guid><category>extragalactic astronomy</category><category>favorite book</category><category>cosmology</category></item><item><title>Python and HDF5</title><link>http://karenyyng.github.io/python-and-hdf5.html</link><description>&lt;p&gt;&lt;img alt="Python and HDF5" src="http://karenyng.files.wordpress.com/2014/05/512k43xgxml.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;It is a saturday so I get to choose what type of books that I read at
my &amp;quot;leisure time&amp;quot;.
As a continuation of my quest for trying to use python (well) for my
research I have been investigating the possibility of using HDF5 to
store some simulation results ... HDF5 is a flexible and fast file
format that the theoretical astrophysicists prefer nowadays (also have
to mention that the file format was first designed by my beloved college
UIUC!) I like it especially because of :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;fast read time - library &amp;nbsp;written in C, with nice Python wrapper library h5py&lt;/li&gt;
&lt;li&gt;flexible - you can choose a chunk of the data to read, not the entire dataset&lt;/li&gt;
&lt;li&gt;allows metadata to be stored - this is important coz I don't want to have to remember what exact parameters I used for creating a dataset 3 months after creating them, I want the data to be self-documented&lt;/li&gt;
&lt;li&gt;data structure organized like directory - beyond the scope of discussion here since I haven't got to that part of the book yet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All in all the book was alright but they should really include a list
of reference of the most commonly used commands.
Here they go (for my later reference):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import h5py
&amp;gt;&amp;gt;&amp;gt; import numpy as np
&amp;gt;&amp;gt;&amp;gt; f = h5py.File(&amp;quot;filepath&amp;quot;, &amp;quot;w&amp;quot;) # let's just open a file to write
# create two datasets with names &amp;quot;array1&amp;quot; and &amp;quot;array2&amp;quot;
&amp;gt;&amp;gt;&amp;gt; f[&amp;quot;array1&amp;quot;] = np.ones((100, 1000)) # initialize a big 2D array
&amp;gt;&amp;gt;&amp;gt; f[&amp;quot;array2&amp;quot;] = np.zeros((int(1e5), int(1e6)))
# easy writing of metadata as attributes
&amp;gt;&amp;gt;&amp;gt; f[&amp;quot;array1&amp;quot;].attrs[&amp;quot;info&amp;quot;] = &amp;quot;big array&amp;quot;
&amp;gt;&amp;gt;&amp;gt; f[&amp;quot;array2&amp;quot;].attrs[&amp;quot;info&amp;quot;] = &amp;quot;bigger array&amp;quot;
&amp;gt;&amp;gt;&amp;gt; f.close()
&lt;/pre&gt;
&lt;p&gt;Now this part about reading and examining the data is a bit lacking from
the book, just tell me that ONE command that I need!:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; f = h5py.File(&amp;quot;filepath&amp;quot;, &amp;quot;r&amp;quot;) # read only
# this should give you the keys e.g. [&amp;quot;array1&amp;quot;, &amp;quot;array2&amp;quot;]
# so you don't have to remember what &amp;quot;datasets&amp;quot; are actually in the file
# this is the one command to rule them all
&amp;gt;&amp;gt;&amp;gt; f.keys()
&amp;gt;&amp;gt;&amp;gt; f[&amp;quot;array1&amp;quot;].attrs.keys() # gives you the keys to call the attributes
&lt;/pre&gt;
&lt;p&gt;Oh and I am not sure if I didn't read the book carefully enough or if
they really have a weird syntax for retrieving the actual data:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# read the data back into python as a numpy array
&amp;gt;&amp;gt;&amp;gt; arr = f[&amp;quot;array1&amp;quot;][...]
&lt;/pre&gt;
&lt;p&gt;Or if you have a linux / mac, you just want to check the file structure
quickly,&lt;/p&gt;
&lt;p&gt;at the command line you can do:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ h5ls -vlr file.h5
&lt;/pre&gt;
&lt;p&gt;It would spit out the descriptions of the dataset and the keys for
calling the dataset.&lt;/p&gt;
&lt;p&gt;Currently not trying to do anything fancy with the hdf5 files yet but
I think it 'd be good to use hdf5 in the long run.
Sorry about just putting the code up like that - I meant to migrate
this blog to something like &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;
... oh well maybe another time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Sat, 24 May 2014 17:11:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-05-24:python-and-hdf5.html</guid><category>hdf5</category><category>Python</category></item><item><title>Galactic dynamics</title><link>http://karenyyng.github.io/galactic-dynamics.html</link><description>&lt;p&gt;&lt;img alt="Galactic dynamics" src="http://karenyng.files.wordpress.com/2014/05/ebd8224b9da0c4eb85a3c010-l.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Was reviewing some basics in astronomy. Stuff such as the
color-magnitude diagram for showing the relationship between the color
and the brightness of stars (weird that astronomers call it
color-magnitude coz it is really magnitude vs color diagram). Was also
glad to see discussions of collisionless encounters (e.g. stuff that i
work on)
Great book for reviewing astrophysics overall, very clear and in
depth. Will aim to read the potential theory part that has more to do
with the dynamical DM simulations that I do.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Thu, 22 May 2014 21:51:00 -0700</pubDate><guid>tag:karenyyng.github.io,2014-05-22:galactic-dynamics.html</guid><category>astronomy</category><category>Astrophysics</category><category>cosmology</category></item><item><title>Debugging python code with ipdb</title><link>http://karenyyng.github.io/debugging-python-code-with-ipdb.html</link><description>&lt;p&gt;Tried a couple of ways to debug python code,&amp;nbsp;including using the &lt;cite&gt;%pdb&lt;/cite&gt;
magic within &lt;cite&gt;IPython&lt;/cite&gt; or use %debug in the postmortem mode.&amp;nbsp;Still
couldn't figure out how to restart the code within the &lt;cite&gt;pdb&lt;/cite&gt; invoked by the &lt;cite&gt;pdb&lt;/cite&gt;
magic without
pdb raising a &amp;quot;restart&amp;quot; error.&lt;/p&gt;
&lt;p&gt;So I think maybe the best way is to stick with the ipython debugger,
ipdb which has autocomplete and syntax highlighting:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python -m ipdb myscript.py
&lt;/pre&gt;
&lt;p&gt;and insert breakpoints with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ b mymodule.py:lineNum
&lt;/pre&gt;
&lt;p&gt;and &amp;nbsp;debug until the next break point or restart by typing the shortcut
for continue:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ c
&lt;/pre&gt;
&lt;p&gt;which behaves more similarly to gdb that I 'm more used to.&lt;/p&gt;
&lt;p&gt;if you want to debug a certain function from another module, set a break
point to step inside that function by:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ from module.py import function
$ b function
&lt;/pre&gt;
&lt;p&gt;and list all the arguments for this particular function:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ args
&lt;/pre&gt;
&lt;p&gt;We can also execute python code by:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ !my_python_code_or_command
&lt;/pre&gt;
&lt;p&gt;Stepping through the code is also the same as &lt;cite&gt;gdb&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ step  # or s
&lt;/pre&gt;
&lt;p&gt;One of my favorite commands is actually&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ up
&lt;/pre&gt;
&lt;p&gt;which moves the debugger state to one state up the stack trace.
i.e. previous line executed&lt;/p&gt;
&lt;p&gt;These are all the functionalities of pdb that I make use of so far.&lt;/p&gt;
&lt;p&gt;Other useful tips can be found
at&amp;nbsp;&lt;a class="reference external" href="http://docs.python.org/2/library/pdb.html"&gt;http://docs.python.org/2/library/pdb.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Trying to say goodbye to debugging with print statements.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Sat, 22 Feb 2014 13:30:00 -0800</pubDate><guid>tag:karenyyng.github.io,2014-02-22:debugging-python-code-with-ipdb.html</guid><category>debugging</category><category>Python</category></item><item><title>How to switch apps/windows w/o using the mouse on a Mac</title><link>http://karenyyng.github.io/how-to-avoid-using-the-mouse-trackpad.html</link><description>&lt;p&gt;If you know me, then you would know that I am not a big fan of using the
mouse.&amp;nbsp;Back in the old days when I used linux, I could customize most of
the keyboard shortcuts so it was easy to stay with the keyboard without
using the mouse.&amp;nbsp;Lol even though I did set up expośe with my linux box,
it was just for the fun, not out of necessity.&lt;/p&gt;
&lt;p&gt;After switching to mac, I got distracted and never actually learned how
to navigate with the keyboard only. It was also one of the grudges that
I first had against using a Mac.&lt;/p&gt;
&lt;p&gt;But today, I have finally found what I want!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cmd Tab - helps you switch between applications&lt;/li&gt;
&lt;li&gt;Cmd &amp;nbsp;` (this is the grave accent sign, not tilde) helps you switch
between different windows of the same application&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Fri, 21 Feb 2014 22:33:00 -0800</pubDate><guid>tag:karenyyng.github.io,2014-02-21:how-to-avoid-using-the-mouse-trackpad.html</guid></item><item><title>PyData 2013</title><link>http://karenyyng.github.io/pydata-2013.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://vimeo.com/pydata/videos/page:1/sort:date"&gt;PyData 2013&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It was a really rewarding experience going to PyData and I am pleasantly
surprised that the organizers have uploaded the talks already
:&amp;nbsp;&lt;a class="reference external" href="https://vimeo.com/pydata/videos/page:1/sort:date"&gt;https://vimeo.com/pydata/videos/page:1/sort:date&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;p&gt;Particularly good talks include:&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vimeo.com/63256380"&gt;https://vimeo.com/63256380&lt;/a&gt;- given by the CEO of Continuum Analytics
talking about the next generation Python scientific computing package
called Blaze which is optimized for big data analysis.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://vimeo.com/63250251"&gt;https://vimeo.com/63250251&lt;/a&gt;&amp;nbsp;- keynote talk by Fernando Perez on
ipython.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;p&gt;more on that later.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">karenyng</dc:creator><pubDate>Sat, 06 Apr 2013 15:13:00 -0700</pubDate><guid>tag:karenyyng.github.io,2013-04-06:pydata-2013.html</guid><category>PyData</category></item></channel></rss>